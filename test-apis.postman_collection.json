{
	"info": {
		"_postman_id": "8af26a12-97f0-4396-8525-f4d2e5ac2e95",
		"name": "test-apis",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "get",
			"item": [
				{
					"name": "successful",
					"item": [
						{
							"name": "Get No Params",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Successful No body\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/get",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get One Param",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Successful one param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/get/:param0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get",
										":param0"
									],
									"variable": [
										{
											"key": "param0",
											"value": "valid"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Two Params",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Successful two param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/get/:param0/var2/:param1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get",
										":param0",
										"var2",
										":param1"
									],
									"variable": [
										{
											"key": "param0",
											"value": "valid"
										},
										{
											"key": "param1",
											"value": "valid"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Two Params with closing",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Successful two param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/get/:param0/var2/:param1/closing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get",
										":param0",
										"var2",
										":param1",
										"closing"
									],
									"variable": [
										{
											"key": "param0",
											"value": "valid"
										},
										{
											"key": "param1",
											"value": "valid"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Ensure response status is success\", function() {",
									"    responseJson = pm.response.json();",
									"    pm.expect(responseJson.success).to.eql(true)",
									"})",
									"",
									"pm.test(\"Ensure status code\", function() {",
									"    pm.response.to.have.status(200)",
									"})"
								]
							}
						}
					]
				},
				{
					"name": "not found",
					"item": [
						{
							"name": "Get One Param Not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Unsuccessful one param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/get/:param0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get",
										":param0"
									],
									"variable": [
										{
											"key": "param0",
											"value": "missing"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Two Params Not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Unsuccessful two param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/get/:param0/var2/:param1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get",
										":param0",
										"var2",
										":param1"
									],
									"variable": [
										{
											"key": "param0",
											"value": "missing"
										},
										{
											"key": "param1",
											"value": "missing"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Two Params with closing Not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Unsuccessful two param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/get/:param0/var2/:param1/closing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get",
										":param0",
										"var2",
										":param1",
										"closing"
									],
									"variable": [
										{
											"key": "param0",
											"value": "missing"
										},
										{
											"key": "param1",
											"value": "valid"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Ensure response status is success\", function() {",
									"    responseJson = pm.response.json();",
									"    pm.expect(responseJson.success).to.eql(false)",
									"})",
									"",
									"pm.test(\"Ensure status code\", function() {",
									"    pm.response.to.have.status(404)",
									"})"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "post",
			"item": [
				{
					"name": "successful",
					"item": [
						{
							"name": "Post No Params",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Successful No body\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/post",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"post"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post One Param",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Successful one param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/post/:param0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"post",
										":param0"
									],
									"variable": [
										{
											"key": "param0",
											"value": "valid"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Two Params",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Successful two param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/post/:param0/var2/:param1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"post",
										":param0",
										"var2",
										":param1"
									],
									"variable": [
										{
											"key": "param0",
											"value": "valid"
										},
										{
											"key": "param1",
											"value": "valid"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Post two Params with closing",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Successful two param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/post/:param0/var2/:param1/closing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"post",
										":param0",
										"var2",
										":param1",
										"closing"
									],
									"variable": [
										{
											"key": "param0",
											"value": "valid"
										},
										{
											"key": "param1",
											"value": "valid"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Post No Params with Body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Successful body no params\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"valid\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/post/body",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"post",
										"body"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post One Param with Body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Successful body one param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"valid\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/post/body/:param0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"post",
										"body",
										":param0"
									],
									"variable": [
										{
											"key": "param0",
											"value": "valid"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Two Param with Body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Successful body two params\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"valid\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/post/body/:param0/var2/:param1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"post",
										"body",
										":param0",
										"var2",
										":param1"
									],
									"variable": [
										{
											"key": "param0",
											"value": "valid"
										},
										{
											"key": "param1",
											"value": "valid"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Two param with closing and Body ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Successful body two params\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"valid\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/post/body/:param0/var2/:param1/closing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"post",
										"body",
										":param0",
										"var2",
										":param1",
										"closing"
									],
									"variable": [
										{
											"key": "param0",
											"value": "valid"
										},
										{
											"key": "param1",
											"value": "valid"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Ensure response status is success\", function() {",
									"    responseJson = pm.response.json();",
									"    pm.expect(responseJson.success).to.eql(true)",
									"})",
									"",
									"pm.test(\"Ensure status code\", function() {",
									"    pm.response.to.have.status(200)",
									"})"
								]
							}
						}
					]
				},
				{
					"name": "not found",
					"item": [
						{
							"name": "Post One Param",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Unsuccessful one param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/post/:param0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"post",
										":param0"
									],
									"variable": [
										{
											"key": "param0",
											"value": "missing"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Two Params",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Unsuccessful two param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/post/:param0/var2/:param1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"post",
										":param0",
										"var2",
										":param1"
									],
									"variable": [
										{
											"key": "param0",
											"value": "missing"
										},
										{
											"key": "param1",
											"value": "valid"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Post two Params with closing",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Unsuccessful two param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/post/:param0/var2/:param1/closing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"post",
										":param0",
										"var2",
										":param1",
										"closing"
									],
									"variable": [
										{
											"key": "param0",
											"value": "missing"
										},
										{
											"key": "param1",
											"value": "missing"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Post One Param with Body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Unsuccesful body one param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"valid\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/post/body/:param0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"post",
										"body",
										":param0"
									],
									"variable": [
										{
											"key": "param0",
											"value": "missing"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Two Param with Body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Unsuccesful body two params\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"valid\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/post/body/:param0/var2/:param1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"post",
										"body",
										":param0",
										"var2",
										":param1"
									],
									"variable": [
										{
											"key": "param0",
											"value": "valid"
										},
										{
											"key": "param1",
											"value": "missing"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Post Two param with closing and Body ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Unsuccesful body two params\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"valid\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/post/body/:param0/var2/:param1/closing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"post",
										"body",
										":param0",
										"var2",
										":param1",
										"closing"
									],
									"variable": [
										{
											"key": "param0",
											"value": "missing"
										},
										{
											"key": "param1",
											"value": "missing"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Ensure response status is success\", function() {",
									"    responseJson = pm.response.json();",
									"    pm.expect(responseJson.success).to.eql(false)",
									"})",
									"",
									"pm.test(\"Ensure status code\", function() {",
									"    pm.response.to.have.status(404)",
									"})"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "put",
			"item": [
				{
					"name": "successful",
					"item": [
						{
							"name": "Put No Params",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Successful No body\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/put",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"put"
									],
									"query": [
										{
											"key": "",
											"value": "valid",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Put One Param",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Successful one param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/put/:param0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"put",
										":param0"
									],
									"variable": [
										{
											"key": "param0",
											"value": "valid"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Put Two Params",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Successful two param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/put/:param0/var2/:param1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"put",
										":param0",
										"var2",
										":param1"
									],
									"variable": [
										{
											"key": "param0",
											"value": "valid"
										},
										{
											"key": "param1",
											"value": "valid"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Put two Params with closing",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Successful two param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/put/:param0/var2/:param1/closing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"put",
										":param0",
										"var2",
										":param1",
										"closing"
									],
									"variable": [
										{
											"key": "param0",
											"value": "valid"
										},
										{
											"key": "param1",
											"value": "valid"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Put No Params with Body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Successful body no params\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"valid\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/put/body",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"put",
										"body"
									]
								}
							},
							"response": []
						},
						{
							"name": "Put One Param with Body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Successful body one param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"valid\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/put/body/:param0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"put",
										"body",
										":param0"
									],
									"variable": [
										{
											"key": "param0",
											"value": "valid"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Put Two Param with Body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Successful body two params\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"valid\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/put/body/:param0/var2/:param1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"put",
										"body",
										":param0",
										"var2",
										":param1"
									],
									"variable": [
										{
											"key": "param0",
											"value": "valid"
										},
										{
											"key": "param1",
											"value": "valid"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Put Two param with closing and Body ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Successful body two params\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"valid\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/put/body/:param0/var2/:param1/closing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"put",
										"body",
										":param0",
										"var2",
										":param1",
										"closing"
									],
									"variable": [
										{
											"key": "param0",
											"value": "valid"
										},
										{
											"key": "param1",
											"value": "valid"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Ensure response status is success\", function() {",
									"    responseJson = pm.response.json();",
									"    pm.expect(responseJson.success).to.eql(true)",
									"})",
									"",
									"pm.test(\"Ensure status code\", function() {",
									"    pm.response.to.have.status(200)",
									"})"
								]
							}
						}
					]
				},
				{
					"name": "not found",
					"item": [
						{
							"name": "Put One Param",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Unsuccessful one param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/put/:param0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"put",
										":param0"
									],
									"variable": [
										{
											"key": "param0",
											"value": "missing"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Put Two Params",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Unsuccessful two param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/put/:param0/var2/:param1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"put",
										":param0",
										"var2",
										":param1"
									],
									"variable": [
										{
											"key": "param0",
											"value": "missing"
										},
										{
											"key": "param1",
											"value": "missing"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Put two Params with closing",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Unsuccessful two param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/put/:param0/var2/:param1/closing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"put",
										":param0",
										"var2",
										":param1",
										"closing"
									],
									"variable": [
										{
											"key": "param0",
											"value": "valid"
										},
										{
											"key": "param1",
											"value": "missing"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Put One Param with Body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Unsuccesful body one param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"valid\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/put/body/:param0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"put",
										"body",
										":param0"
									],
									"variable": [
										{
											"key": "param0",
											"value": "missing"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Put Two Param with Body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Unsuccesful body two params\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"valid\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/put/body/:param0/var2/:param1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"put",
										"body",
										":param0",
										"var2",
										":param1"
									],
									"variable": [
										{
											"key": "param0",
											"value": "missing"
										},
										{
											"key": "param1",
											"value": "missing"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Put Two param with closing and Body ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Unsuccesful body two params\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"valid\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/put/body/:param0/var2/:param1/closing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"put",
										"body",
										":param0",
										"var2",
										":param1",
										"closing"
									],
									"variable": [
										{
											"key": "param0",
											"value": "missing"
										},
										{
											"key": "param1",
											"value": "valid"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Ensure response status is success\", function() {",
									"    responseJson = pm.response.json();",
									"    pm.expect(responseJson.success).to.eql(false)",
									"})",
									"",
									"pm.test(\"Ensure status code\", function() {",
									"    pm.response.to.have.status(404)",
									"})"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "patch",
			"item": [
				{
					"name": "successful",
					"item": [
						{
							"name": "Patch No Params",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Successful No body\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/patch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"patch"
									],
									"query": [
										{
											"key": null,
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Patch One Param",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Successful one param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/patch/:param0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"patch",
										":param0"
									],
									"variable": [
										{
											"key": "param0",
											"value": "valid"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Patch Two Params",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Successful two param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/patch/:param0/var2/:param1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"patch",
										":param0",
										"var2",
										":param1"
									],
									"variable": [
										{
											"key": "param0",
											"value": "valid"
										},
										{
											"key": "param1",
											"value": "valid"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Patch two Params with closing",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Successful two param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/patch/:param0/var2/:param1/closing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"patch",
										":param0",
										"var2",
										":param1",
										"closing"
									],
									"variable": [
										{
											"key": "param0",
											"value": "valid"
										},
										{
											"key": "param1",
											"value": "valid"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Patch No Params with Body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Successful body no params\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"valid\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/patch/body",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"patch",
										"body"
									]
								}
							},
							"response": []
						},
						{
							"name": "Patch One Param with Body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Successful body one param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"valid\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/patch/body/:param0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"patch",
										"body",
										":param0"
									],
									"variable": [
										{
											"key": "param0",
											"value": "valid"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Patch Two Param with Body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Successful body two params\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"valid\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/patch/body/:param0/var2/:param1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"patch",
										"body",
										":param0",
										"var2",
										":param1"
									],
									"variable": [
										{
											"key": "param0",
											"value": "valid"
										},
										{
											"key": "param1",
											"value": "valid"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Patch Two param with closing and Body ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Successful body two params\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"valid\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/patch/body/:param0/var2/:param1/closing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"patch",
										"body",
										":param0",
										"var2",
										":param1",
										"closing"
									],
									"variable": [
										{
											"key": "param0",
											"value": "valid"
										},
										{
											"key": "param1",
											"value": "valid"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Ensure response status is success\", function() {",
									"    responseJson = pm.response.json();",
									"    pm.expect(responseJson.success).to.eql(true)",
									"})",
									"",
									"pm.test(\"Ensure status code\", function() {",
									"    pm.response.to.have.status(200)",
									"})"
								]
							}
						}
					]
				},
				{
					"name": "not found",
					"item": [
						{
							"name": "Patch One Param",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Unsuccessful one param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/patch/:param0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"patch",
										":param0"
									],
									"variable": [
										{
											"key": "param0",
											"value": "missing"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Patch Two Params",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Unsuccessful two param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/patch/:param0/var2/:param1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"patch",
										":param0",
										"var2",
										":param1"
									],
									"variable": [
										{
											"key": "param0",
											"value": "valid"
										},
										{
											"key": "param1",
											"value": "missing"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Patch two Params with closing",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Unsuccessful two param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/patch/:param0/var2/:param1/closing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"patch",
										":param0",
										"var2",
										":param1",
										"closing"
									],
									"variable": [
										{
											"key": "param0",
											"value": "missing"
										},
										{
											"key": "param1",
											"value": "missing"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Patch One Param with Body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Unsuccesful body one param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"valid\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/patch/body/:param0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"patch",
										"body",
										":param0"
									],
									"variable": [
										{
											"key": "param0",
											"value": "missing"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Patch Two Param with Body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Unsuccesful body two params\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"valid\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/patch/body/:param0/var2/:param1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"patch",
										"body",
										":param0",
										"var2",
										":param1"
									],
									"variable": [
										{
											"key": "param0",
											"value": "missing"
										},
										{
											"key": "param1",
											"value": "valid"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Patch Two param with closing and Body ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Unsuccesful body two params\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"valid\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/patch/body/:param0/var2/:param1/closing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"patch",
										"body",
										":param0",
										"var2",
										":param1",
										"closing"
									],
									"variable": [
										{
											"key": "param0",
											"value": "missing"
										},
										{
											"key": "param1",
											"value": "missing"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Ensure response status is success\", function() {",
									"    responseJson = pm.response.json();",
									"    pm.expect(responseJson.success).to.eql(false)",
									"})",
									"",
									"pm.test(\"Ensure status code\", function() {",
									"    pm.response.to.have.status(404)",
									"})"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "delete",
			"item": [
				{
					"name": "successful",
					"item": [
						{
							"name": "Delete No Params",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Successful No body\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"delete"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete One Param",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Successful one param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/delete/:param0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"delete",
										":param0"
									],
									"variable": [
										{
											"key": "param0",
											"value": "valid"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Two Params",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Successful two param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/delete/:param0/var2/:param1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"delete",
										":param0",
										"var2",
										":param1"
									],
									"variable": [
										{
											"key": "param0",
											"value": "valid"
										},
										{
											"key": "param1",
											"value": "valid"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete two Params with closing",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Successful two param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/delete/:param0/var2/:param1/closing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"delete",
										":param0",
										"var2",
										":param1",
										"closing"
									],
									"variable": [
										{
											"key": "param0",
											"value": "valid"
										},
										{
											"key": "param1",
											"value": "valid"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete No Params with Body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Successful body no params\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"valid\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/delete/body",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"delete",
										"body"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete One Param with Body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Successful body one param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"valid\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/delete/body/:param0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"delete",
										"body",
										":param0"
									],
									"variable": [
										{
											"key": "param0",
											"value": "valid"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Two Param with Body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Successful body two params\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"valid\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/delete/body/:param0/var2/:param1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"delete",
										"body",
										":param0",
										"var2",
										":param1"
									],
									"variable": [
										{
											"key": "param0",
											"value": "valid"
										},
										{
											"key": "param1",
											"value": "valid"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Two param with closing and Body ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Successful body two params\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"valid\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/delete/body/:param0/var2/:param1/closing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"delete",
										"body",
										":param0",
										"var2",
										":param1",
										"closing"
									],
									"variable": [
										{
											"key": "param0",
											"value": "valid"
										},
										{
											"key": "param1",
											"value": "valid"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Ensure response status is success\", function() {",
									"    responseJson = pm.response.json();",
									"    pm.expect(responseJson.success).to.eql(true)",
									"})",
									"",
									"pm.test(\"Ensure status code\", function() {",
									"    pm.response.to.have.status(200)",
									"})"
								]
							}
						}
					]
				},
				{
					"name": "not found",
					"item": [
						{
							"name": "Delete One Param",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Unsuccessful one param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/delete/:param0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"delete",
										":param0"
									],
									"variable": [
										{
											"key": "param0",
											"value": "missing"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Two Params",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Unsuccessful two param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/delete/:param0/var2/:param1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"delete",
										":param0",
										"var2",
										":param1"
									],
									"variable": [
										{
											"key": "param0",
											"value": "missing"
										},
										{
											"key": "param1",
											"value": "valid"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete two Params with closing",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Unsuccessful two param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/delete/:param0/var2/:param1/closing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"delete",
										":param0",
										"var2",
										":param1",
										"closing"
									],
									"variable": [
										{
											"key": "param0",
											"value": "valid"
										},
										{
											"key": "param1",
											"value": "missing"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete One Param with Body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Unsuccesful body one param\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"valid\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/delete/body/:param0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"delete",
										"body",
										":param0"
									],
									"variable": [
										{
											"key": "param0",
											"value": "missing"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Two Param with Body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Unsuccesful body two params\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"valid\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/delete/body/:param0/var2/:param1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"delete",
										"body",
										":param0",
										"var2",
										":param1"
									],
									"variable": [
										{
											"key": "param0",
											"value": "valid"
										},
										{
											"key": "param1",
											"value": "missing"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Two param with closing and Body ",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Ensure expected message\", function() {",
											"    responseJson = pm.response.json();",
											"    pm.expect(responseJson.response).to.eql(\"Unsuccesful body two params\")",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"valid\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/delete/body/:param0/var2/:param1/closing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"delete",
										"body",
										":param0",
										"var2",
										":param1",
										"closing"
									],
									"variable": [
										{
											"key": "param0",
											"value": "missing"
										},
										{
											"key": "param1",
											"value": "valid"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Ensure response status is success\", function() {",
									"    responseJson = pm.response.json();",
									"    pm.expect(responseJson.success).to.eql(false)",
									"})",
									"",
									"pm.test(\"Ensure status code\", function() {",
									"    pm.response.to.have.status(404)",
									"})"
								]
							}
						}
					]
				}
			]
		}
	]
}